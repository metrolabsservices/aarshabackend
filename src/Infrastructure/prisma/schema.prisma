// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model LoginRegister {
  id          Int @id @default(autoincrement())
  userName String
  userMail    String  @unique() // mail id 
  password String 
  role String  // admin - superadmin - developer - receiptionist - generaluser
  isApproved Boolean 
}

model Questions {
  id          Int @id @default(autoincrement())
  question    String  @db.Text()
  questionType String
  options     String[] @db.Text()
  isImage     Boolean @db.Boolean()
  images      String[] @db.Text()
  boardType   String
  toughness   String
  subject     String
  topicName   String
  grade       String
  createdDate String
  updatedDate String
}

model OptionsMaster {
  id          Int       @id @default(autoincrement())
  boardTypes String[] // CBSE - SSC - ICSE - OTHERS
  subjectTypes String[] // Telugu - Hindi - English - Math - Physics - Chemistry - Biology - Social - OTHERS
  studentStatusTypes String[] // AWAY - REGULAR - IN-ACTIVE - OTHERS
  gradeTypes String[] // Class - (1 - 10) , OTHERS
  paymentTypes String[] // CARD - CASH - PHONE_PAY - GOOGLE_PAY - PAYTM - CRED - BANKS_TANSFERS
  transactionsCategoryTypes Json 
  transactionTypes String[] // Pending - Processing - Completed - Failed - Refunded - Cancelled - On_Hold - Reversed - Pending Review
  transactionCategories String[] // Tuition - Stationery - Activity - Library - Salaries - Utilities - Repairs - Furniture - Technology - Events - Others - Refund
  transactionMode String[] // Debit -  Credit -  Others
}

model TransactionsList {
  id          Int       @id @default(autoincrement())
  itemName String
  description String
  category String // Tuition-Stationery-Activity-Library-Donations-Salaries-Utilities-Repairs-Furniture-Technology-Marketing-Events-Others-Refund
  dateOfPayment DateTime 
  amount Int
  modeOfPayment String // Phone Pay, Google Pay, Paytm, Cred, Bank Transfer, Card, Cash
  transactionMode String // Debit, Credit
  isDeleted Boolean @default(false)
}

model Student {
  id          Int       @id @default(autoincrement())
  name        String
  classNo String
  schoolName  String
  boardType   String    // CBSE - SSC - IBSE
  studentStatus      String    // AWAY - REGULAR - IN-ACTIVE
  pastScore Int
  joiningDate DateTime
  timing    String
  parentName String
  parentPhnNo String
  whatsappNo String
  isDeleted Boolean
  subjectsTaken String[]
  dueAmount   Int
  feeCharge   FeeCharge[]
  feeDetails  FeeDetail[]
  subjectStatistics SubjectStatistics[]
}

model FeeCharge {
  id          Int       @id @default(autoincrement())
  amount      Int
  dateOfCharged  DateTime
  student     Student   @relation(fields: [studentId], references: [id])
  studentId   Int
}

model FeeDetail {
  id          Int       @id @default(autoincrement())
  paidAmount      Int
  subjectsTaken String[]
  dateOfPaid  DateTime
  student     Student   @relation(fields: [studentId], references: [id])
  studentId   Int
}

model SubjectStatistics {
  id          Int       @id @default(autoincrement())
  subjectName String
  subjectScores String[]  // scoredMarks^^^maxMarks^^^DateOfTest^^^GradeNumber^^^
  student     Student   @relation(fields: [studentId], references: [id])
  studentId   Int
}


